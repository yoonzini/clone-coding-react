{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"wWAgBeA,MAbf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GAEV,yBAAKG,UAAU,oBACb,mIAIA,wD,gFC+BSC,MArCf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,yBAAKN,UAAU,SACb,kBAAC,IAAD,CACEO,GAAI,CACFC,SAAU,gBACVC,MAAO,CAAEN,OAAMD,QAAOE,UAASC,SAAQC,YAGzC,yBAAKI,IAAKL,EAAQM,IAAKT,EAAOA,MAAOA,IACrC,yBAAKF,UAAU,eACb,wBAAIA,UAAU,gBAAgBE,GAC9B,wBAAIF,UAAU,eAAeG,GAC7B,wBAAIH,UAAU,iBACXM,EAAOM,KAAI,SAACC,EAAOC,GAClB,OACE,wBAAIC,IAAKD,EAAOd,UAAU,gBACvBa,MAIP,uBAAGb,UAAU,kBAAkBI,EAAQY,MAAM,EAAG,KAAhD,YCsCGC,G,kNAxDbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAQAC,IAAMC,IACd,4DATQ,gBAMEJ,EANF,EAKRK,KACEA,KAAQL,OAKZrB,QAAQC,IAAIoB,GACZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAZzB,2C,kEAiBVQ,KAAKN,c,+BAGE,MAGuBM,KAAKjB,MAA3BS,EAHD,EAGCA,UAAWC,EAHZ,EAGYA,OAEnB,OADArB,QAAQC,IAAI,aAEV,6BAASC,UAAU,aAChBkB,EACC,yBAAKlB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,iBAGF,yBAAKA,UAAU,UACZmB,EAAOP,KAAI,SAACe,GAAD,OACV,kBAAC,EAAD,CACEZ,IAAKY,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZD,MAAOyB,EAAMzB,MACbE,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,kB,GA/CXwB,IAAMC,Y,MCMVC,MATf,WACE,OACE,yBAAKhC,UAAU,OACb,kBAAC,IAAD,CAAMO,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCcS0B,E,kLAnBO,MAEYP,KAAK7B,MAA3BqC,EAFU,EAEVA,SAAUC,EAFA,EAEAA,aAEKC,IAAnBF,EAASzB,OACX0B,EAAQE,KAAK,O,+BAIP,IACAH,EAAaR,KAAK7B,MAAlBqC,SACR,OAAIA,EAASzB,MACJ,8BAAOyB,EAASzB,MAAMP,OAEtB,S,GAfQ4B,IAAMC,WCiBZO,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IACxC,kBAAC,IAAD,CAAOsB,KAAK,SAASE,UAAW7C,IAChC,kBAAC,IAAD,CAAO2C,KAAK,gBAAgBE,UAAWR,MCT7CS,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.3d40b6d4.chunk.js","sourcesContent":["import React from 'react';\nimport './About.css';\n\nfunction About(props) {\n  console.log(props);\n  return (\n    <div className=\"about__container\">\n      <span>\n        \"Freedom is the freedom to say that two plus two make four. if that is\n        granted, all else follows.\n      </span>\n      <span>- Georg Orwell, 1984</span>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\nimport { Link } from 'react-router-dom';\n\nfunction Movie({ title, year, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: '/movie-detail',\n          state: { year, title, summary, poster, genres },\n        }}\n      >\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => {\n              return (\n                <li key={index} className=\"movie__genre\">\n                  {genre}\n                </li>\n              );\n            })}\n            <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n          </ul>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import { PropTypes } from 'prop-types';\nimport React from 'react';\nimport axios from 'axios';\nimport Movie from '../components/Movie';\nimport './Home.css';\n\n// App클래스는  React.component 클래스를 상속받는다.\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [], //미리 데이터를 정의하기\n  };\n\n  getMovies = async () => {\n    // api에서 데이터를 받아오는 axios.get()을 실행하려면 시간이 필요하고,\n    // 그 사실을 자바스크립트에게 알려야만 데이터를 잡ㅂ을 수 있으므로\n    // async, await 를 사용하였다.\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      'https://yts-proxy.now.sh/list_movies.json?sort_by=rating'\n    );\n    console.log(movies);\n    this.setState({ movies, isLoading: false }); //키와 대입할 변수의 이름이 같으면 축약가능\n  };\n\n  componentDidMount() {\n    // 영화 데이터 로딩!\n    this.getMovies();\n  }\n\n  render() {\n    //구조 분해 할당으로 this.state에 있는 isLoading을 우선 얻으면\n    // 항상 this.state를 입력하지 않아도 된다.\n    const { isLoading, movies } = this.state;\n    console.log('rendering');\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">'Loading...'</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nfunction Navigation() {\n  return (\n    <div className=\"nav\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/about\">About</Link>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\n\nclass Detail extends React.Component {\n  componentDidMount() {\n    //detail컴포넌트가 마운트 되면\n    const { location, history } = this.props; //구조분해할당으로 얻어서\n\n    if (location.state === undefined) {\n      history.push('/');\n    }\n  }\n\n  render() {\n    const { location } = this.props;\n    if (location.state) {\n      return <span>{location.state.title}</span>;\n    } else {\n      return null; //null을 반환하고 didMount기능이 동작한다.\n    }\n  }\n}\n\nexport default Detail;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie-detail\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,  document.getElementById('root'));\n// 리액트는 최종으로 단 한개의 컴포넌트를 그려야 한다.\n// 따라서 2개를 넣으면 에러가 발생한다.\n// app안에 potato를 넣어서 해결한다."],"sourceRoot":""}